#!/usr/bin/env bash

dna-log_script() {

	############################################################################

    while getopts ":hi" arguments
    do
        case $arguments
        in
            h)	local include_hostname="y"
                ;;
            i)  local force_log_even_when_interactive="y"
                ;;
            \?)	dna-echo -e "Invalid option | ${n-}-${OPTARG}${r-} | for function | ${n-}${FUNCNAME[0]}${r-} |."
                dna-exit
                ;;
        esac
    done
    OPTIND=1

	############################################################################

	script_name=$(basename "${0}")
	now="$(date +"%Y-%m-%d_%H-%M-%S")"
	log_dir="${HOME}/logs/${project_name}/${script_name}"
	log_file="${log_dir}/${project_name}_${script_name}.log"
	if [[ -t 1 ]]; then interactive="y"; else interactive="n"; fi
	if [ "${interactive}" = "n" ] || [ -n "${force_log_even_when_interactive-}" ]												### If non-interactive, then...
	then
		mkdir -p "${log_dir}"
		savelog -qdlc 42 "${log_file}"
        exec &> >(tee "${log_file}")
		chmod -R 700 "${log_dir}"
	fi

	if [ -n "${include_hostname-}" ]
	then

		dna-get_hostname

		echo "Starting ${o-}${project_name}${n-} ${y-}${script_name}${n-} script on node ${hostname} on ${l-}${now}${n-}..." && echo																### Write heading to log_file

	else

		echo "Starting ${o-}${project_name}${n-} ${y-}${script_name}${n-} script on ${l-}${now}${n-}..." && echo

	fi

}

dna-head_script() {

	script_name=$(basename "${0}")
	now="$(date +"%Y-%m-%d_%H-%M-%S")"
	echo "Starting ${script_name} script on ${now}..." && echo

}

dna-exit() {

    if [ ! -z "${lockfile_set-}" ]
    then
        if [ -f "${lockfile_set}" ]
        then
            dna-echo -e "Exiting and clearing lockfile..."
            rm "${lockfile_set}"
        fi
    else
        dna-echo -e "Exiting..."
    fi
    sleep 1
    exit 1

}
